@tailwind base;
@tailwind components;
@tailwind utilities;
@layer base {
  :root {
    --background: linear-gradient(
      to top,
      hsl(187, 10%, 94%),
      hsl(130, 10%, 95%)
    );
    --foreground: 156.2 5% 10%; /* Base text color */
    --header: 174 42% 26%;
    --card: linear-gradient(to top, #f3fcf7, #f3fdf5); /* Cards background */
    --card-foreground: 156.2 5% 15%;
    --popover: 156.2 100% 95%;
    --popover-foreground: 156.2 100% 10%;
    --primary: #274340; /* Primary button color */
    --primary-foreground: 0 0% 0%; /* Text on primary button */
    --secondary: 156.2 30% 70%; /* Secondary button */
    --secondary-foreground: 0 0% 0%; /* Text on secondary */
    --muted: 118.19999999999999 30% 85%; /* Muted color */
    --muted-foreground: 156.2 5% 35%;
    --accent: 118.19999999999999 30% 80%; /* Accent color */
    --accent-foreground: 156.2 5% 15%; /* Text on accent */
    --destructive: 0 100% 30%; /* Destructive action (e.g., delete button) */
    --destructive-foreground: 156.2 5% 90%; /* Text on destructive */
    --border: 156.2 30% 50%; /* Border color */
    --input: 156.2 30% 26%; /* Input fields */
    --ring: 156.2 71.6% 66.9%; /* Focused ring color */
    --radius: 0.5rem; /* Border radius */
    --qm: #285252; /* Custom color */
  }

  /* Dark mode or opposite theme */
  .dark {
    --background: 183 18% 80%; /* Opposite of the base background */
    --foreground: 156.2 5% 90%; /* Light text on dark background */
    --card: 183 18% 35%; /* Opposite of card */
    --card-foreground: 156.2 5% 90%;
    --popover: 156.2 100% 5%;
    --popover-foreground: 156.2 100% 90%;
    --primary: 216 44% 20%; /* Opposite of the primary button */
    --primary-foreground: 0 0% 100%; /* Light text on dark primary button */
    --secondary: 340 40% 50%; /* Opposite of secondary button */
    --secondary-foreground: 0 0% 100%; /* Light text on dark secondary */
    --muted: 118.19999999999999 30% 20%; /* Opposite of muted */
    --muted-foreground: 156.2 5% 60%; /* Opposite of muted text */
    --accent: 118.19999999999999 30% 30%; /* Darker accent */
    --accent-foreground: 156.2 5% 90%; /* Light text on accent */
    --destructive: 0 100% 80%; /* Opposite of destructive */
    --destructive-foreground: 156.2 5% 10%; /* Dark text on light destructive */
    --border: 156.2 30% 26%; /* Opposite border */
    --input: 156.2 30% 26%; /* Opposite input */
    --ring: 216 71.6% 35%; /* Dark ring color */
    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

.widget-handle {
  cursor: move;
  padding: 10px;
  background-color: #4a90e2;
  color: white;
  border-radius: 5px;
  margin-bottom: 10px;
}

.react-grid-item.react-grid-placeholder {
  background-color: rgba(84, 84, 84, 0.687) !important;
  border-radius: 8px !important; /* Rounded corners */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2) !important;
  border: none !important;
}

.grid-item {
  transition: all 0.2s ease;
}

.grid-item-placeholder {
  background-color: rgba(0, 0, 255, 0.2);
}

@keyframes vibrate {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(2deg);
  }
  50% {
    transform: rotate(0eg);
  }
  75% {
    transform: rotate(-2deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

.vibrate {
  animation: vibrate 0.2s linear infinite;
}

@keyframes vibrate_small {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }
  25% {
    transform: translate(1.5px, 1.5px) rotate(1deg);
  }
  50% {
    transform: translate(0, 0) rotate(0eg);
  }
  75% {
    transform: translate(-1.5px, -1.5px) rotate(-1deg);
  }
  100% {
    transform: translate(0, 0) rotate(0deg);
  }
}

.vibrate_small {
  animation: vibrate_small 0.6s linear infinite;
}

/* Coin */
@keyframes coin-pop {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}

.animate-coin-pop {
  animation: coin-pop 0.5s ease;
}

@keyframes coin-bounce {
  0% {
    opacity: 0;
    transform: scale(0.5) translateY(20px);
  }
  50% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
  100% {
    opacity: 0;
    transform: scale(0.5) translateY(-20px);
  }
}

.animate-coin-bounce {
  animation: coin-bounce 1.5s ease;
}

@keyframes float {
  0% {
    opacity: 0;
    transform: translateY(10px);
  }
  50% {
    opacity: 1;
    transform: translateY(-10px);
  }
  100% {
    opacity: 0;
    transform: translateY(-30px);
  }
}

.animate-float {
  animation: float 1.5s ease;
}

@keyframes rotate {
  0% {
    opacity: 0;
    transform: rotate(0deg) scale(0.5);
  }
  50% {
    opacity: 1;
    transform: rotate(180deg) scale(1);
  }
  100% {
    opacity: 0;
    transform: rotate(360deg) scale(0.5);
  }
}

.animate-rotate {
  animation: rotate 1.5s ease;
}

@keyframes fade {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.animate-fade {
  animation: fade 1.5s ease;
}

@keyframes zoom {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  50% {
    opacity: 1;
    transform: scale(1.5);
  }
  100% {
    opacity: 0;
    transform: scale(0.5);
  }
}

.animate-zoom {
  animation: zoom 1.5s ease;
}

@keyframes vibrate_coin {
  0% {
    transform: rotate(0deg);
    transform: translate(0, 0);
  }
  25% {
    transform: rotate(2deg);
    transform: translate(2px, -2px);
  }
  50% {
    transform: rotate(0eg);
    transform: translate(-2px, 2px);
  }
  75% {
    transform: rotate(-2deg);
    transform: translate(2px, 2px);
  }
  100% {
    transform: rotate(0deg);
    transform: translate(0, 0);
  }
}

.vibrate_coin {
  animation: vibrate_coin 0.1s ease-in-out;

/* Add this to your global CSS file */
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.3);
  }
  100% {
    transform: scale(1);
  }
}

.pulsating-logo {
  width: 50px; /* Adjust as needed */
  height: 50px; /* Adjust as needed */
  /* background-color: #4CAF50; Replace with the color or background you want */
  border-radius: 50%; /* Make it circular */
  display: inline-block;
  animation: pulse 1.5s infinite ease-in-out; /* Pulsating animation */
}
